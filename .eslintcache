[{"C:\\Users\\louis\\development\\to-do-list\\src\\App.tsx":"1","C:\\Users\\louis\\development\\to-do-list\\src\\index.tsx":"2","C:\\Users\\louis\\development\\to-do-list\\src\\Components\\ListButton\\ListButton.tsx":"3","C:\\Users\\louis\\development\\to-do-list\\src\\reportWebVitals.ts":"4","C:\\Users\\louis\\development\\to-do-list\\src\\Components\\ListButton\\index.tsx":"5","C:\\Users\\louis\\development\\to-do-list\\src\\Components\\TextInput\\TextInput.tsx":"6","C:\\Users\\louis\\development\\to-do-list\\src\\Components\\TextInput\\index.tsx":"7","C:\\Users\\louis\\development\\to-do-list\\src\\Components\\ToDoItem\\ToDoItem.tsx":"8","C:\\Users\\louis\\development\\to-do-list\\src\\Components\\ToDoItem\\index.tsx":"9"},{"size":621,"mtime":1610905379898,"results":"10","hashOfConfig":"11"},{"size":500,"mtime":1608384607508,"results":"12","hashOfConfig":"11"},{"size":291,"mtime":1610493848666,"results":"13","hashOfConfig":"11"},{"size":425,"mtime":1608384607508,"results":"14","hashOfConfig":"11"},{"size":66,"mtime":1610482864331,"results":"15","hashOfConfig":"11"},{"size":408,"mtime":1610533727048,"results":"16","hashOfConfig":"11"},{"size":63,"mtime":1610492820132,"results":"17","hashOfConfig":"11"},{"size":433,"mtime":1610905154983,"results":"18","hashOfConfig":"11"},{"size":60,"mtime":1610902299319,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"1atofo9",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\louis\\development\\to-do-list\\src\\App.tsx",["43"],"import * as React from 'react';\nimport './App.css'\nimport { useState } from \"react\";\n\nimport ListButton from \"./Components/ListButton\";\nimport TextInput from \"./Components/TextInput\";\nimport ToDoItem from \"./Components/ToDoItem\"\n\nconst initialtodos: Array<Todo> = [{text: \"to do number one\", complete: true}, {text: \"what;s upppp\", complete: false}]\n\nconst App = () => {\n\n  const [todos, setCompleted] = useState(initialtodos);  \n\n  return (\n    <>\n    <ListButton text=\"hello\"/>\n    <TextInput />\n    <p>app works</p>\n    <ToDoItem todo={todos[0]} />\n    <ToDoItem todo={todos[1]} />\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\louis\\development\\to-do-list\\src\\index.tsx",[],"C:\\Users\\louis\\development\\to-do-list\\src\\Components\\ListButton\\ListButton.tsx",["44"],"import * as React from 'react';\r\nimport './ListButton.css'\r\n\r\ninterface Props {\r\n  text: string;\r\n  ok?: boolean;\r\n  i?: number;\r\n  \r\n}\r\n\r\nconst ListButton: React.FC<Props> = ({}) => {\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <p>button works</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListButton; ",["45","46"],"C:\\Users\\louis\\development\\to-do-list\\src\\reportWebVitals.ts",[],"C:\\Users\\louis\\development\\to-do-list\\src\\Components\\ListButton\\index.tsx",[],["47","48"],"C:\\Users\\louis\\development\\to-do-list\\src\\Components\\TextInput\\TextInput.tsx",["49"],"import * as React from 'react';\r\nimport './TextInput.css';\r\n\r\ninterface Props {\r\n  text?: string;\r\n  ok?: boolean;\r\n  i?: number;\r\n}\r\n\r\nconst TextInput: React.FC<Props> = ({}) => {\r\n\r\n  const textInputForList = React.useRef<HTMLInputElement>(null);\r\n\r\n\r\n  return (\r\n    <>\r\n      <p className=\"inputBox\">input works</p>\r\n      <input ref={textInputForList} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TextInput; ","C:\\Users\\louis\\development\\to-do-list\\src\\Components\\TextInput\\index.tsx",[],"C:\\Users\\louis\\development\\to-do-list\\src\\Components\\ToDoItem\\ToDoItem.tsx",[],"C:\\Users\\louis\\development\\to-do-list\\src\\Components\\ToDoItem\\index.tsx",[],{"ruleId":"50","severity":1,"message":"51","line":13,"column":17,"nodeType":"52","messageId":"53","endLine":13,"endColumn":29},{"ruleId":"54","severity":1,"message":"55","line":11,"column":38,"nodeType":"56","messageId":"57","endLine":11,"endColumn":40},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"58","replacedBy":"62"},{"ruleId":"60","replacedBy":"63"},{"ruleId":"54","severity":1,"message":"55","line":10,"column":37,"nodeType":"56","messageId":"57","endLine":10,"endColumn":39},"@typescript-eslint/no-unused-vars","'setCompleted' is assigned a value but never used.","Identifier","unusedVar","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-native-reassign",["64"],"no-negated-in-lhs",["65"],["64"],["65"],"no-global-assign","no-unsafe-negation"]